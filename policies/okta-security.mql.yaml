policies:
  - uid: mondoo-okta-security-v2
    name: Okta Organization Security (v2)
    version: 1.0.0
    license: MPL-2.0
    tags:
      mondoo.com/category: security
      mondoo.com/platform: okta-org,saas
    authors:
      - name: Mondoo, Inc
        email: hello@mondoo.com
    docs:
      desc: |
        # Overview
        
        The Mondoo Okta Security policy bundle provides security recommendations for Okta organizations.
        
        ## About remote scanning
        
        Remote scans with cnspec provide on demand security assessments of infrastructure and services without the need to install any agents or integrations. cnspec comes with a growing list of providers to connect and scan local and remote targets.
        
        A complete list of providers can be found by running the following command:
        
        ```bash
        cnspec scan --help
        ```
        
        ### cnspec Okta provider
        
        This policy uses the `okta` provider to authenticate with Okta's API in order to remotely scan an Okta organization. Additional information on the `okta` provider can be found by running the following command:
        
        ```bash
        cnspec scan okta --help
        ```
        
        ## Configuring the Okta provider
        
        The `okta` provider for cnspec requires an API token to authenticate and run scans.
        
        ### Create an API token\n\nTo create an API token, see [Create an API token](https://developer.okta.com/docs/guides/create-an-api-token/main/) on Okta's documentation site.
        
        ### Configure a OKTA_TOKEN environment variable\n\nYou supply your API token to cnspec using the `OKTA_TOKEN` environment variable.
        
        #### Linux / macOS
        
        ```bash
        export OKTA_TOKEN=<OKTA_TOKEN>
        ```
        
        #### Windows
        ```powershell
        $Env:OKTA_TOKEN = "<OKTA_TOKEN>"
        ```
        
        ## Scan an Okta organization
        
        To scan the configuration of an Okta organization all together:
        
        ```bash
        cnspec scan okta --organization DOMAIN.okta.com --token $OKTA_TOKEN  --policy-bundle mondoo-okta-security.mql.yaml
        ```
        ## Join the community! 
        Our goal is to build policies that are simple to deploy, accurate, and actionable. \n\nIf you have any suggestions on how to improve this policy, or if you need support, [join the community](https://github.com/orgs/mondoohq/discussions) in GitHub Discussions.\n"
    groups: 
      - title: Okta Organization HealthInsight recommendations
        checks: 
          # Limit the number of super admin roles
          - uid: mondoo-okta-security-limit-super-admins 
          # Enable strong password policy settings
          - uid: mondoo-okta-security-password-settings-minimum-length
          - uid: mondoo-okta-security-password-settings-min-lowercase
          - uid: mondoo-okta-security-password-settings-min-number
          - uid: mondoo-okta-security-password-settings-min-symbols
          - uid: mondoo-okta-security-password-settings-min-age
          - uid: mondoo-okta-security-password-settings-exclude-username
          - uid: mondoo-okta-security-password-settings-exclude-first-name
          - uid: mondoo-okta-security-password-settings-exclude-last-name
          - uid: mondoo-okta-security-password-settings-dictionary-lookup
          - uid: mondoo-okta-security-password-settings-max-age
          - uid: mondoo-okta-security-password-settings-expire-warning
          - uid: mondoo-okta-security-password-settings-history-count
          - uid: mondoo-okta-security-password-settings-max-lockout-attempts
          - uid: mondoo-okta-security-password-settings-password-auto-unlock-minutes
          - uid: mondoo-okta-security-password-settings-password-show-lockout-failures
          - uid: mondoo-okta-security-password-settings-password-email-recovery
          - uid: mondoo-okta-security-password-settings-password-sms-recovery
          - uid: mondoo-okta-security-password-settings-password-question-recovery

queries:
  - uid: mondoo-okta-security-password-settings-minimum-length
    title: Enable strong password settings for password policies - minimum length
    impact: 30
    props:
      - uid: oktaPasswordLength
        mql: 15
    docs:
      desc: |
        Specify a minimum password length of at least eight characters. Longer passwords provide greater protection against brute force attacks.

        Longer passwords are more difficult for users to remember, especially when combined with other complexity requirements (for example, require uppercase, lowercase, symbols, and so on). NIST recommends longer passwords that are easy to remember (“phrase-like”) but more difficult to obtain from brute force attacks.

        These recommendations are provided by Okta as an example of typical password standards. They're derived from current cybersecurity industry best practices. They aren't intended to replace internationally recognized cybersecurity standards, such as ISO 27001, National Institute of Standards and Technology (NIST), PCI-DSS, or others. Your IT department may need to adjust these settings to comply with whichever cybersecurity standard your organization has chosen to follow.
    variants:
      - uid: mondoo-okta-security-password-settings-minimum-length-runtime
      - uid: mondoo-okta-security-password-settings-minimum-length-terraform-hcl
      - uid: mondoo-okta-security-password-settings-minimum-length-terraform-plan
  - uid: mondoo-okta-security-password-settings-minimum-length-runtime
    title: Enable strong password settings for password policies - minimum length 
    filters: asset.platform == "okta-org"
    impact: 30
    mql: |
      okta.policies.password.all( settings['password']['complexity']['minLength'] >= 15 )
  - uid: mondoo-okta-security-password-settings-minimum-length-terraform-hcl
    title: Enable strong password settings for password policies - minimum length 
    filters: asset.platform == "terraform-hcl" && terraform.providers.one( nameLabel == "okta" ) 
    impact: 30
    mql: |
      terraform.resources.where( nameLabel == /okta_policy_password/ ).all( arguments['password_min_length'] == /var/ || arguments['password_min_length'] >= 15 )
  - uid: mondoo-okta-security-password-settings-minimum-length-terraform-plan
    title: Enable strong password settings for password policies - minimum length 
    filters: asset.platform == "terraform-plan" && terraform.plan.resourceChanges.contains( providerName == /okta/ )
    impact: 30
    mql: |
      terraform.plan.resourceChanges.where( type == /okta_policy_password/ ).all( change.after['password_min_length'] >= 15 )

  - uid: mondoo-okta-security-password-settings-max-lockout-attempts
    title: Enable strong password settings for password policies - max lockout attempts 
    impact: 30
    props:
      - uid: oktaPasswordMaxLockoutAttempts
        mql: 5
    docs:
      desc: |
        Specify the maximum number of invalid password attempts before locking the user's account. This provides protection against brute-force password attacks.

        Users will be unable to access their accounts after multiple failed sign-ins.

        Admins configure the account unlock options in the lockout options in password policy rules.

        If an admin doesn't enable any self-service or auto-unlock options, users must ask their admin to unlock their account.

        When admins configure lockout policies, they should consider typical user sign-in patterns and security to determine how many attempts are allowed. A lockout policy that allows only a low number of attempts may cause more lockouts. For example, users may mistype passwords when signing in from a mobile device or when they've recently changed their passwords. Some applications may auto-retry cached passwords when they're changed, resulting in user lockouts. However, a lockout policy with too many attempts allowed increases the risk of credential attacks.
    variants:
      - uid: mondoo-okta-security-password-settings-max-lockout-attempts-runtime
      - uid: mondoo-okta-security-password-settings-max-lockout-attempts-terraform-hcl
      - uid: mondoo-okta-security-password-settings-max-lockout-attempts-terraform-plan
  - uid: mondoo-okta-security-password-settings-max-lockout-attempts-runtime
    title: Enable strong password settings for password policies - max lockout attempts
    filters: asset.platform == "okta-org" 
    impact: 30
    mql: |
      okta.policies.password.all( settings['password']['complexity']['minLength'] <= 5 ) 
  - uid: mondoo-okta-security-password-settings-max-lockout-attempts-terraform-hcl
    title: Enable strong password settings for password policies - max lockout attempts
    filters: asset.platform == "terraform-hcl" && terraform.providers.one( nameLabel == "okta" ) 
    impact: 30
    mql: |
      terraform.resources.where( nameLabel == /okta_policy_password/ ).all( arguments['password_max_lockout_attempts'] == /var/ || arguments['password_max_lockout_attempts'] <= 5 )
  - uid: mondoo-okta-security-password-settings-max-lockout-attempts-terraform-plan
    title: Enable strong password settings for password policies - max lockout attempts 
    filters: asset.platform == "terraform-plan" && terraform.plan.resourceChanges.contains( providerName == /okta/ )
    impact: 30
    mql: |
      terraform.plan.resourceChanges.where( type == /okta_policy_password/ ).all( change.after['password_max_lockout_attempts'] <= 5 )

  - uid: mondoo-okta-security-password-settings-min-lowercase
    title: Enable strong password settings for password policies - minimum lowercase 
    impact: 30
    props:
      - uid: oktaPasswordminLowercase
        mql: 1
    docs:
      desc: |
        Specify the minimum number of lowercase characters in a password. Complex passwords increase the security of your users' accounts.
    variants:
      - uid: mondoo-okta-security-password-settings-min-lowercase-runtime
      - uid: mondoo-okta-security-password-settings-min-lowercase-terraform-hcl
      - uid: mondoo-okta-security-password-settings-min-lowercase-terraform-plan
  - uid: mondoo-okta-security-password-settings-min-lowercase-runtime
    title: Enable strong password settings for password policies - minimum lowercase 
    filters: asset.platform == "okta-org" 
    impact: 30
    mql: |
      okta.policies.password.all( settings['password']['complexity']['minLowerCase'] >= 1 )
  - uid: mondoo-okta-security-password-settings-min-lowercase-terraform-hcl
    title: Enable strong password settings for password policies - minimum lowercase 
    filters: asset.platform == "terraform-hcl" && terraform.providers.one( nameLabel == "okta" ) 
    impact: 30
    mql: |
      terraform.resources.where( nameLabel == /okta_policy_password/ ).all( arguments['password_min_lowercase'] == /var/ || arguments['password_min_lowercase'] >= 1 )
  - uid: mondoo-okta-security-password-settings-min-lowercase-terraform-plan
    title: Enable strong password settings for password policies - minimum lowercase 
    filters: asset.platform == "terraform-plan" && terraform.plan.resourceChanges.contains( providerName == /okta/ )
    impact: 30
    mql: |
      terraform.plan.resourceChanges.where( type == /okta_policy_password/ ).all( change.after['password_min_lowercase'] >= 1 )

  - uid: mondoo-okta-security-password-settings-min-number
    title: Enable strong password settings for password policies - minimum number
    impact: 30
    props:
      - uid: oktaPasswordminNumber
        mql: 1
    docs:
      desc: |
        Specify the minimum number of lowercase characters in a password. Complex passwords increase the security of your users' accounts.
    variants:
      - uid: mondoo-okta-security-password-settings-min-number-runtime
      - uid: mondoo-okta-security-password-settings-min-number-terraform-hcl
      - uid: mondoo-okta-security-password-settings-min-number-terraform-plan
  - uid: mondoo-okta-security-password-settings-min-number-runtime
    title: Enable strong password settings for password policies - minimum number 
    filters: asset.platform == "okta-org"
    impact: 30
    mql: |
      okta.policies.password.all( settings['password']['complexity']['minNumber'] >= 1 ) 
  - uid: mondoo-okta-security-password-settings-min-number-terraform-hcl
    title: Enable strong password settings for password policies - minimum number 
    filters: asset.platform == "terraform-hcl" && terraform.providers.one( nameLabel == "okta" ) 
    impact: 30
    mql: |
      terraform.resources.where( nameLabel == /okta_policy_password/ ).all( arguments['password_min_number'] == /var/ || arguments['password_min_number'] >= 1 )
  - uid: mondoo-okta-security-password-settings-min-number-terraform-plan
    title: Enable strong password settings for password policies - minimum number 
    filters: asset.platform == "terraform-plan" && terraform.plan.resourceChanges.contains( providerName == /okta/ )
    impact: 30
    mql: |
      terraform.plan.resourceChanges.where( type == /okta_policy_password/ ).all( change.after['password_min_number'] >= 1 )

  - uid: mondoo-okta-security-password-settings-min-symbols
    title: Enable strong password settings for password policies - minimum symbols
    impact: 30
    props:
      - uid: oktaPasswordminSymbol
        mql: 1
    docs:
      desc: |
        Specify the minimum number of symbol characters in a password. Complex passwords increase the security of your users' accounts.
    variants:
      - uid: mondoo-okta-security-password-settings-min-symbols-runtime
      - uid: mondoo-okta-security-password-settings-min-symbols-terraform-hcl
      - uid: mondoo-okta-security-password-settings-min-symbols-terraform-plan
  - uid: mondoo-okta-security-password-settings-min-symbols-runtime
    title: Enable strong password settings for password policies - minimum symbols
    filters: asset.platform == "okta-org"
    impact: 30
    mql: |
      okta.policies.password.all( settings['password']['complexity']['minSymbols'] >= 1 ) 
  - uid: mondoo-okta-security-password-settings-min-symbols-terraform-hcl
    title: Enable strong password settings for password policies - minimum symbols
    filters: asset.platform == "terraform-hcl" && terraform.providers.one( nameLabel == "okta" ) 
    impact: 30
    mql: |
      terraform.resources.where( nameLabel == /okta_policy_password/ ).all( arguments['password_min_symbol'] == /var/ || arguments['password_min_symbol'] >= 1 )
  - uid: mondoo-okta-security-password-settings-min-symbols-terraform-plan
    title: Enable strong password settings for password policies - minimum symbols
    filters: asset.platform == "terraform-plan" && terraform.plan.resourceChanges.contains( providerName == /okta/ )
    impact: 30
    mql: |
      terraform.plan.resourceChanges.where( type == /okta_policy_password/ ).all( change.after['password_min_symbol'] >= 1 )

  - uid: mondoo-okta-security-password-settings-min-age
    title: Enable strong password settings for password policies - minimum age
    impact: 30
    props:
      - uid: oktaPasswordminAge
        title: Minimum time interval in minutes between password changes
        mql: 60
    docs:
      desc: |
        Specify the minimum time interval in minutes between password changes. Setting the minimum password interval protects against brute force attacks.
    variants:
      - uid: mondoo-okta-security-password-settings-min-age-runtime
      - uid: mondoo-okta-security-password-settings-min-age-terraform-hcl
      - uid: mondoo-okta-security-password-settings-min-age-terraform-plan
  - uid: mondoo-okta-security-password-settings-min-age-runtime
    title: Enable strong password settings for password policies - minimum age
    filters: asset.platform == "okta-org"
    impact: 30
    mql: |
      okta.policies.password.all( settings['password']['complexity']['minAgeMinutes'] <= 60 ) 
  - uid: mondoo-okta-security-password-settings-min-age-terraform-hcl
    title: Enable strong password settings for password policies - minimum age
    filters: asset.platform == "terraform-hcl" && terraform.providers.one( nameLabel == "okta" ) 
    impact: 30
    mql: |
      terraform.resources.where( nameLabel == /okta_policy_password/ ).all( arguments['password_min_age_minutes'] == /var/ || arguments['password_min_age_minutes'] <= 60 )
  - uid: mondoo-okta-security-password-settings-min-age-terraform-plan
    title: Enable strong password settings for password policies - minimum age
    filters: asset.platform == "terraform-plan" && terraform.plan.resourceChanges.contains( providerName == /okta/ )
    impact: 30
    mql: |
      terraform.plan.resourceChanges.where( type == /okta_policy_password/ ).all( change.after['password_min_age_minutes'] <= 60 )

  - uid: mondoo-okta-security-password-settings-exclude-username
    title: Enable strong password settings for password policies - exclude username
    impact: 30
    props:
      - uid: oktaPasswordexcludeUsername
        title: Setting to enforce whether the username must be excluded from the password
        mql: true
    docs:
      desc: |
        This check enforces whether the username must be excluded from the password. Complex passwords increase the security of your users' accounts.
    variants:
      - uid: mondoo-okta-security-password-settings-exclude-username-runtime
      - uid: mondoo-okta-security-password-settings-exclude-username-terraform-hcl
      - uid: mondoo-okta-security-password-settings-exclude-username-terraform-plan
  - uid: mondoo-okta-security-password-settings-exclude-username-terraform-hcl
    title: Enable strong password settings for password policies - exclude username
    filters: asset.platform == "terraform-hcl" && terraform.providers.one( nameLabel == "okta" ) 
    impact: 30
    mql: |
      terraform.resources.where( nameLabel == /okta_policy_password/ ).all( arguments['password_exclude_username'] == /var/ || arguments['password_exclude_username'] == true )
  - uid: mondoo-okta-security-password-settings-exclude-username-runtime
    title: Enable strong password settings for password policies - exclude username
    filters: asset.platform == "okta-org"
    impact: 30
    mql: |
      okta.policies.password.all( settings['password']['complexity']['excludeUsername'] == true )
  - uid: mondoo-okta-security-password-settings-exclude-username-terraform-plan
    title: Enable strong password settings for password policies - exclude username
    filters: asset.platform == "terraform-plan" && terraform.plan.resourceChanges.contains( providerName == /okta/ )
    impact: 30
    mql: |
      terraform.plan.resourceChanges.where( type == /okta_policy_password/ ).all( change.after['password_exclude_username'] == true )

  - uid: mondoo-okta-security-password-settings-exclude-first-name
    title: Enable strong password settings for password policies - exclude first name
    impact: 30
    props:
      - uid: oktaPasswordexcludeFirstname
        title: Setting to enforce whether the user's first name must be excluded from the password
        mql: true
    docs:
      desc: |
        This check enforces whether the user's first name must be excluded from the password. Complex passwords increase the security of your users' accounts.
    variants:
      - uid: mondoo-okta-security-password-settings-exclude-first-name-terraform-hcl
      - uid: mondoo-okta-security-password-settings-exclude-first-name-terraform-plan
  - uid: mondoo-okta-security-password-settings-exclude-first-name-terraform-hcl
    title: Enable strong password settings for password policies - exclude first name
    filters: asset.platform == "terraform-hcl" && terraform.providers.one( nameLabel == "okta" ) 
    impact: 30
    mql: |
      terraform.resources.where( nameLabel == /okta_policy_password/ ).all( arguments['password_exclude_first_name'] == /var/ || arguments['password_exclude_first_name'] == true )
  - uid: mondoo-okta-security-password-settings-exclude-first-name-terraform-plan
    title: Enable strong password settings for password policies - exclude first name
    filters: asset.platform == "terraform-plan" && terraform.plan.resourceChanges.contains( providerName == /okta/ )
    impact: 30
    mql: |
      terraform.plan.resourceChanges.where( type == /okta_policy_password/ ).all( change.after['password_exclude_first_name'] == true )

  - uid: mondoo-okta-security-password-settings-exclude-last-name
    title: Enable strong password settings for password policies - exclude last name
    impact: 30
    props:
      - uid: oktaPasswordexcludeLastName
        title: Setting to enforce whether the user's last name must be excluded from the password
        mql: true
    docs:
      desc: |
        This check enforces whether the user's last name must be excluded from the password. Complex passwords increase the security of your users' accounts.
    variants:
      - uid: mondoo-okta-security-password-settings-exclude-last-name-terraform-hcl
      - uid: mondoo-okta-security-password-settings-exclude-last-name-terraform-plan
  - uid: mondoo-okta-security-password-settings-exclude-last-name-terraform-hcl
    title: Enable strong password settings for password policies - exclude last name
    filters: asset.platform == "terraform-hcl" && terraform.providers.one( nameLabel == "okta" ) 
    impact: 30
    mql: |
      terraform.resources.where( nameLabel == /okta_policy_password/ ).all( arguments['password_exclude_last_name'] == /var/ || arguments['password_exclude_last_name'] == true )
  - uid: mondoo-okta-security-password-settings-exclude-last-name-terraform-plan
    title: Enable strong password settings for password policies - exclude last name
    filters: asset.platform == "terraform-plan" && terraform.plan.resourceChanges.contains( providerName == /okta/ )
    impact: 30
    mql: |
      terraform.plan.resourceChanges.where( type == /okta_policy_password/ ).all( change.after['password_exclude_last_name'] == true )

  - uid: mondoo-okta-security-password-settings-dictionary-lookup
    title: Enable strong password settings for password policies - dictionary lookup
    impact: 30
    props:
      - uid: oktaPasswordDictionaryLookup
        title: Setting to check passwords against common password dictionary
        mql: true
    docs:
      desc: |
        This checks passwords against common password dictionary. Complex passwords increase the security of your users' accounts.
    variants:
      - uid: mondoo-okta-security-password-settings-dictionary-lookup-runtime
      - uid: mondoo-okta-security-password-settings-dictionary-lookup-terraform-hcl
      - uid: mondoo-okta-security-password-settings-dictionary-lookup-terraform-plan
  - uid: mondoo-okta-security-password-settings-dictionary-lookup-runtime
    title: Enable strong password settings for password policies - dictionary lookup
    filters: asset.platform == "okta-org"
    impact: 30
    mql: |
      okta.policies.password.all( settings['password']['complexity']['dictionary']['common']['exclude'] == true )
  - uid: mondoo-okta-security-password-settings-dictionary-lookup-terraform-hcl
    title: Enable strong password settings for password policies - dictionary lookup
    filters: asset.platform == "terraform-hcl" && terraform.providers.one( nameLabel == "okta" ) 
    impact: 30
    mql: |
      terraform.resources.where( nameLabel == /okta_policy_password/ ).all( arguments['password_dictionary_lookup'] == /var/ || arguments['password_dictionary_lookup'] == true )
  - uid: mondoo-okta-security-password-settings-dictionary-lookup-terraform-plan
    title: Enable strong password settings for password policies - dictionary lookup 
    filters: asset.platform == "terraform-plan" && terraform.plan.resourceChanges.contains( providerName == /okta/ )
    impact: 30
    mql: |
      terraform.plan.resourceChanges.where( type == /okta_policy_password/ ).all( change.after['password_dictionary_lookup'] == true )

  - uid: mondoo-okta-security-password-settings-max-age
    title: Enable strong password settings for password policies - max age
    impact: 30
    props:
      - uid: oktaPasswordMaxAge
        title: Length in days a password is valid before expiry
        mql: 90
    docs:
      desc: |
        This checks the length in days a password is valid before expiry. Rotating passwords increases the security of your users' accounts. 
    variants:
      - uid: mondoo-okta-security-password-settings-max-age-runtime
      - uid: mondoo-okta-security-password-settings-max-age-terraform-hcl
      - uid: mondoo-okta-security-password-settings-max-age-terraform-plan
  - uid: mondoo-okta-security-password-settings-max-age-runtime
    title: Enable strong password settings for password policies - max age
    filters: asset.platform == "okta-org"
    impact: 30
    mql: |
      okta.policies.password.all( settings['password']['age']['maxAgeDays'] != 0 && settings['password']['age']['maxAgeDays'] <= 90 )
  - uid: mondoo-okta-security-password-settings-max-age-terraform-hcl
    title: Enable strong password settings for password policies - max age
    filters: asset.platform == "terraform-hcl" && terraform.providers.one( nameLabel == "okta" ) 
    impact: 30
    mql: |
      terraform.resources.where( nameLabel == /okta_policy_password/ ).all( arguments['password_max_age_days'] == /var/ || arguments['password_max_age_days'] == 90 )
  - uid: mondoo-okta-security-password-settings-max-age-terraform-plan
    title: Enable strong password settings for password policies - max age 
    filters: asset.platform == "terraform-plan" && terraform.plan.resourceChanges.contains( providerName == /okta/ )
    impact: 30
    mql: |
      terraform.plan.resourceChanges.where( type == /okta_policy_password/ ).all( change.after['password_max_age_days'] == 90 )

  - uid: mondoo-okta-security-password-settings-expire-warning
    title: Enable strong password settings for password policies - expiration warning
    impact: 30
    props:
      - uid: oktaPasswordExpireWarning
        title: Length in days a user will be warned before password expiry
        mql: 15
    docs:
      desc: |
        This checks the length in days a user will be warned before password expiry. Rotating passwords increases the security of your users' accounts.
    variants:
      - uid: mondoo-okta-security-password-settings-expire-warning-runtime
      - uid: mondoo-okta-security-password-settings-expire-warning-terraform-hcl
      - uid: mondoo-okta-security-password-settings-expire-warning-terraform-plan
  - uid: mondoo-okta-security-password-settings-expire-warning-runtime
    title: Enable strong password settings for password policies - expiration warning
    filters: asset.platform == "okta-org"
    impact: 30
    mql: |
      okta.policies.password.all( settings['password']['age']['expireWarnDays'] != 0 && settings['password']['age']['expireWarnDays'] <= 15 )
  - uid: mondoo-okta-security-password-settings-expire-warning-terraform-hcl
    title: Enable strong password settings for password policies - expiration warning
    filters: asset.platform == "terraform-hcl" && terraform.providers.one( nameLabel == "okta" ) 
    impact: 30
    mql: |
      terraform.resources.where( nameLabel == /okta_policy_password/ ).all( arguments['password_max_age_days'] == /var/ || arguments['password_max_age_days'] >= 15 )
  - uid: mondoo-okta-security-password-settings-expire-warning-terraform-plan
    title: Enable strong password settings for password policies - expiration warning 
    filters: asset.platform == "terraform-plan" && terraform.plan.resourceChanges.contains( providerName == /okta/ )
    impact: 30
    mql: |
      terraform.plan.resourceChanges.where( type == /okta_policy_password/ ).all( change.after['password_max_age_days'] >= 15 )

  - uid: mondoo-okta-security-password-settings-history-count
    title: Enable strong password settings for password policies - history count
    impact: 30
    props:
      - uid: oktaPasswordHistoryCount
        title: Number of distinct passwords that must be created before they can be reused
        mql: 24
    docs:
      desc: |
        This checks the number of distinct passwords that must be created before they can be reused. Rotating passwords increases the security of your users' accounts.
    variants:
      - uid: mondoo-okta-security-password-settings-history-count-runtime
      - uid: mondoo-okta-security-password-settings-history-count-terraform-hcl
      - uid: mondoo-okta-security-password-settings-history-count-terraform-plan
  - uid: mondoo-okta-security-password-settings-history-count-runtime
    title: Enable strong password settings for password policies - history count
    filters: asset.platform == "okta-org"
    impact: 30
    mql: |
      okta.policies.password.all( settings['password']['age']['historyCount'] >= 24 ) 
  - uid: mondoo-okta-security-password-settings-history-count-terraform-hcl
    title: Enable strong password settings for password policies - history count
    filters: asset.platform == "terraform-hcl" && terraform.providers.one( nameLabel == "okta" ) 
    impact: 30
    mql: |
      terraform.resources.where( nameLabel == /okta_policy_password/ ).all( arguments['password_history_count'] == /var/ || arguments['password_history_count'] >= 24 )
  - uid: mondoo-okta-security-password-settings-history-count-terraform-plan
    title: Enable strong password settings for password policies - history count 
    filters: asset.platform == "terraform-plan" && terraform.plan.resourceChanges.contains( providerName == /okta/ )
    impact: 30
    mql: |
      terraform.plan.resourceChanges.where( type == /okta_policy_password/ ).all( change.after['password_history_count'] >= 24 )

  - uid: mondoo-okta-security-password-settings-password-auto-unlock-minutes
    title: Enable strong password settings for password policies - auto unlock 
    impact: 30
    props:
      - uid: oktaPasswordAutoUnlock
        title: Number of minutes before a locked account is unlocked
        mql: 30
    docs:
      desc: |
        This checks the number of minutes before a locked account is unlocked.
    variants:
      - uid: mondoo-okta-security-password-settings-auto-unlock-minutes-runtime
      - uid: mondoo-okta-security-password-settings-auto-unlock-minutes-terraform-hcl
      - uid: mondoo-okta-security-password-settings-auto-unlock-minutes-terraform-plan
  - uid: mondoo-okta-security-password-settings-auto-unlock-minutes-runtime
    title: Enable strong password settings for password policies - auto unlock
    filters: asset.platform == "okta-org"
    impact: 30
    mql: |
      okta.policies.password.all( settings['password']['lockout']['autoUnlockMinutes'] >= 30 ) 
  - uid: mondoo-okta-security-password-settings-auto-unlock-minutes-terraform-hcl
    title: Enable strong password settings for password policies - auto unlock
    filters: asset.platform == "terraform-hcl" && terraform.providers.one( nameLabel == "okta" ) 
    impact: 30
    mql: |
      terraform.resources.where( nameLabel == /okta_policy_password/ ).all( arguments['password_auto_unlock_minutes'] == /var/ || arguments['password_auto_unlock_minutes'] >= 30 )
  - uid: mondoo-okta-security-password-settings-auto-unlock-minutes-terraform-plan
    title: Enable strong password settings for password policies - auto unlock 
    filters: asset.platform == "terraform-plan" && terraform.plan.resourceChanges.contains( providerName == /okta/ )
    impact: 30
    mql: |
      terraform.plan.resourceChanges.where( type == /okta_policy_password/ ).all( change.after['password_auto_unlock_minutes'] >= 30 )

  - uid: mondoo-okta-security-password-settings-password-show-lockout-failures
    title: Enable strong password settings for password policies - show lockout failures 
    impact: 30
    props:
      - uid: oktaPasswordShowLockoutFailures
        title: If a user should be informed when their account is locked
        mql: true
    docs:
      desc: |
        This checks whether a user should be informed when their account is locked.
    variants:
      - uid: mondoo-okta-security-password-settings-show-lockout-failures-runtime
      - uid: mondoo-okta-security-password-settings-show-lockout-failures-terraform-hcl
      - uid: mondoo-okta-security-password-settings-show-lockout-failures-terraform-plan
  - uid: mondoo-okta-security-password-settings-show-lockout-failures-runtime
    title: Enable strong password settings for password policies - show lockout failures
    filters: asset.platform == "okta-org"
    impact: 30
    mql: |
      okta.policies.password.all( settings['password']['lockout']['showLockoutFailures'] == true )
  - uid: mondoo-okta-security-password-settings-show-lockout-failures-terraform-hcl
    title: Enable strong password settings for password policies - show lockout failures
    filters: asset.platform == "terraform-hcl" && terraform.providers.one( nameLabel == "okta" ) 
    impact: 30
    mql: |
      terraform.resources.where( nameLabel == /okta_policy_password/ ).all( arguments['password_show_lockout_failures'] == /var/ || arguments['password_show_lockout_failures'] == true )
  - uid: mondoo-okta-security-password-settings-show-lockout-failures-terraform-plan
    title: Enable strong password settings for password policies - show lockout failures 
    filters: asset.platform == "terraform-plan" && terraform.plan.resourceChanges.contains( providerName == /okta/ )
    impact: 30
    mql: |
      terraform.plan.resourceChanges.where( type == /okta_policy_password/ ).all( change.after['password_show_lockout_failures'] == true )

  - uid: mondoo-okta-security-password-settings-password-email-recovery
    title: Enable strong password settings for password policies - email recovery 
    impact: 30
    props:
      - uid: oktaPasswordEmailRecovery
        title: Enable or disable email password recovery - ACTIVE or INACTIVE
        mql: return "ACTIVE"
    docs:
      desc: |
        This checks whether email password recovery is enabled or disabled.
    variants:
      - uid: mondoo-okta-security-password-settings-email-recovery-runtime
      - uid: mondoo-okta-security-password-settings-email-recovery-terraform-hcl
      - uid: mondoo-okta-security-password-settings-email-recovery-terraform-plan
  - uid: mondoo-okta-security-password-settings-email-recovery-runtime
    title: Enable strong password settings for password policies - email recovery 
    filters: asset.platform == "okta-org"
    impact: 30
    mql: |
      okta.policies.password.all( settings['recovery']['factors']['okta_email']['status'] == "ACTIVE" )
  - uid: mondoo-okta-security-password-settings-email-recovery-terraform-hcl
    title: Enable strong password settings for password policies - email recovery 
    filters: asset.platform == "terraform-hcl" && terraform.providers.one( nameLabel == "okta" ) 
    impact: 30
    mql: |
      terraform.resources.where( nameLabel == /okta_policy_password/ ).all( arguments['email_recovery'] == /var/ || arguments['email_recovery'] == "ACTIVE" )
  - uid: mondoo-okta-security-password-settings-email-recovery-terraform-plan
    title: Enable strong password settings for password policies - email recovery  
    filters: asset.platform == "terraform-plan" && terraform.plan.resourceChanges.contains( providerName == /okta/ )
    impact: 30
    mql: |
      terraform.plan.resourceChanges.where( type == /okta_policy_password/ ).all( change.after['email_recovery'] == "ACTIVE" )

  - uid: mondoo-okta-security-password-settings-password-sms-recovery
    title: Enable strong password settings for password policies - sms recovery 
    impact: 30
    props:
      - uid: oktaPasswordSmsRecovery
        title: Enable or disable sms password recovery - ACTIVE or INACTIVE
        mql: return "ACTIVE"
    docs:
      desc: |
        This checks whether sms password recovery is enabled or disabled.
    variants:
      - uid: mondoo-okta-security-password-settings-sms-recovery-runtime
      - uid: mondoo-okta-security-password-settings-sms-recovery-terraform-hcl
      - uid: mondoo-okta-security-password-settings-sms-recovery-terraform-plan
  - uid: mondoo-okta-security-password-settings-sms-recovery-runtime
    title: Enable strong password settings for password policies - sms recovery 
    filters: asset.platform == "okta-org"
    impact: 30
    mql: |
      okta.policies.password.all( settings['recovery']['factors']['okta_sms']['status'] == "ACTIVE" )
  - uid: mondoo-okta-security-password-settings-sms-recovery-terraform-hcl
    title: Enable strong password settings for password policies - sms recovery 
    filters: asset.platform == "terraform-hcl" && terraform.providers.one( nameLabel == "okta" ) 
    impact: 30
    mql: |
      terraform.resources.where( nameLabel == /okta_policy_password/ ).all( arguments['sms_recovery'] == /var/ || arguments['sms_recovery'] == "ACTIVE" )
  - uid: mondoo-okta-security-password-settings-sms-recovery-terraform-plan
    title: Enable strong password settings for password policies - sms recovery  
    filters: asset.platform == "terraform-plan" && terraform.plan.resourceChanges.contains( providerName == /okta/ )
    impact: 30
    mql: |
      terraform.plan.resourceChanges.where( type == /okta_policy_password/ ).all( change.after['sms_recovery'] == "ACTIVE" )

  - uid: mondoo-okta-security-password-settings-password-question-recovery
    title: Enable strong password settings for password policies - question recovery 
    impact: 30
    props:
      - uid: oktaPasswordQuestionRecovery
        title: Enable or disable question password recovery - ACTIVE or INACTIVE
        mql: return "ACTIVE"
    docs:
      desc: |
        This checks whether question password recovery is enabled or disabled.
    variants:
      - uid: mondoo-okta-security-password-settings-question-recovery-runtime
      - uid: mondoo-okta-security-password-settings-question-recovery-terraform-hcl
      - uid: mondoo-okta-security-password-settings-question-recovery-terraform-plan
  - uid: mondoo-okta-security-password-settings-question-recovery-runtime
    title: Enable strong password settings for password policies - question recovery 
    filters: asset.platform == "okta-org"
    impact: 30
    mql: |
      okta.policies.password.all( settings['recovery']['factors']['recovery_question']['status'] == "ACTIVE" ) 
  - uid: mondoo-okta-security-password-settings-question-recovery-terraform-hcl
    title: Enable strong password settings for password policies - question recovery 
    filters: asset.platform == "terraform-hcl" && terraform.providers.one( nameLabel == "okta" ) 
    impact: 30
    mql: |
      terraform.resources.where( nameLabel == /okta_policy_password/ ).all( arguments['question_recovery'] == /var/ || arguments['question_recovery'] == "ACTIVE" )
  - uid: mondoo-okta-security-password-settings-question-recovery-terraform-plan
    title: Enable strong password settings for password policies - question recovery  
    filters: asset.platform == "terraform-plan" && terraform.plan.resourceChanges.contains( providerName == /okta/ )
    impact: 30
    mql: |
      terraform.plan.resourceChanges.where( type == /okta_policy_password/ ).all( change.after['question_recovery'] == "ACTIVE" )

  - uid: mondoo-okta-security-limit-super-admins
    title: Limit the number of super admins
    impact: 100
    docs:
      desc: |
        Admin roles allow you to control user access to a range of Okta functions. You can assign more than one role to an individual admin if their job requires them to perform actions that span multiple roles. This role can create other admins, assign or remove permissions, and perform all other admin activities. The super admin has the highest permissions of all admin roles.
    props:
      - uid: maxOktaSuperAdmins
        mql: 15
    variants:
      - uid: mondoo-okta-security-limit-super-admins-runtime 
  - uid: mondoo-okta-security-limit-super-admins-runtime
    title: Limit the number of super admins 
    impact: 100 
    filters: asset.platform == "okta-org"        
    mql: okta.users.where( roles { type == "SUPER_ADMIN" } ).length < 15

  # - uid: mondoo-okta-security-threatinsight-block-suspicous-ip-addresses
  #   title: Enable Okta ThreatInsight to block suspicious IP addresses
  #   impact: 100
  #   docs:
  #     desc: |
  #       Enable Okta ThreatInsight to both log and block authentication attempts from suspicious IP addresses.
  #   variants:
  #     # - uid: mondoo-okta-security-threatinsight-block-suspicous-ip-addresses-terraform-hcl  
  #     # - uid: mondoo-okta-security-threatinsight-block-suspicous-ip-addresses-terraform-plan  
  #     - uid: mondoo-okta-security-threatinsight-block-suspicous-ip-addresses-terraform-runtime
  # - uid: mondoo-okta-security-threatinsight-block-suspicous-ip-addresses-terraform-hcl
  #   title: Enable Okta ThreatInsight to block suspicious IP addresses
  #   filters: asset.platform == "okta"
  #   mql: 